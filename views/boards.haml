.container
  .row
    %h2.ollert-header
      .text-center.col-xs-12
        Proyectos

  .row
    %hr
  
  - @asignados = Array.new()
  - @states.each do |state|
    .col-md-2.col-sm-2.col-xs-4.no-padding
      .analysis-block-md
        #{state}
        %ul{class: 'boards-list'}
          - @boards.each do |org_name, boards|
            - boards.each do |board|
              - if state == board["name"].split('|')[1]
                - @asignados<<board["name"]
                %li.boards-list-item
                  %a.btn.btn-link.boards-list-item-link{href: "/boards/#{board["id"]}"}
                    #{board["name"].split('|')[2]}
  .col-md-2.col-sm-2.col-xs-4.no-padding
    .analysis-block-md
      NO ASIGNADO
      %ul{class: 'boards-list'}
        - @boards.each do |org_name, boards|
          - boards.each do |board|
            - unless  @asignados.include?(board["name"])
              %li.boards-list-item
                %a.btn.btn-link.boards-list-item-link{href: "/boards/#{board["id"]}"}
                  #{board["name"]}
          
:javascript
  window.onload = function() {
    var adjustment;

    $(".boards-list").sortable({
      group: 'simple_with_animation',
      pullPlaceholder: false,
      // animation on drop
      onDrop: function  ($item, container, _super) {
        var $clonedItem = $('<li/>').css({height: 0});
        $item.before($clonedItem);
        $clonedItem.animate({'height': $item.height()});

        $item.animate($clonedItem.position(), function  () {
          $clonedItem.detach();
          _super($item, container);
        });
        var boardState=$item.parent().parent().text().split('\n')[1].replace(/ /g,'');
        if(boardState=="Noiniciado"){
          boardState="No iniciado";
        }
        var boardId=$item.find('a').attr('href').split('/')[2];
        $.ajax({
          url: "/api/v1/change_board_state/" + boardId,
          data: {
            token: "#{@token}",
            state: boardState
          },
          error: function(xhr) {
            alert("Usted no tiene permisos de administrador en el tablero. El cambio de estado no será guardado.");
          }
        });
      },

      // set $item relative to cursor position
      onDragStart: function ($item, container, _super) {
        var offset = $item.offset(),
            pointer = container.rootGroup.pointer;

        adjustment = {
          left: pointer.left - offset.left,
          top: pointer.top - offset.top
        };

        _super($item, container);
      },
      onDrag: function ($item, position) {
        $item.css({
          left: position.left - adjustment.left,
          top: position.top - adjustment.top
        });

      }
    });

  };
:javascript
  /*! * jQuery UI Touch Punch 0.2.3 * * Copyright 2011–2014, Dave Furfero * Dual licensed under the MIT or GPL Version 2 licenses. * * Depends: * jquery.ui.widget.js * jquery.ui.mouse.js */ ! function(a) {
  function f(a, b) {
      if (!(a.originalEvent.touches.length > 1)) {
          a.preventDefault();
          var c = a.originalEvent.changedTouches[0],
              d = document.createEvent("MouseEvents");
          d.initMouseEvent(b, !0, !0, window, 1, c.screenX, c.screenY, c.clientX, c.clientY, !1, !1, !1, !1, 0, null), a.target.dispatchEvent(d)
      }
  }
  if (a.support.touch = "ontouchend" in document, a.support.touch) {
      var e, b = a.ui.mouse.prototype,
          c = b._mouseInit,
          d = b._mouseDestroy;
      b._touchStart = function(a) {
          var b = this;
          !e && b._mouseCapture(a.originalEvent.changedTouches[0]) && (e = !0, b._touchMoved = !1, f(a, "mouseover"), f(a, "mousemove"), f(a, "mousedown"))
      }, b._touchMove = function(a) {
          e && (this._touchMoved = !0, f(a, "mousemove"))
      }, b._touchEnd = function(a) {
          e && (f(a, "mouseup"), f(a, "mouseout"), this._touchMoved || f(a, "click"), e = !1)
      }, b._mouseInit = function() {
          var b = this;
          b.element.bind({
              touchstart: a.proxy(b, "_touchStart"),
              touchmove: a.proxy(b, "_touchMove"),
              touchend: a.proxy(b, "_touchEnd")
          }), c.call(b)
      }, b._mouseDestroy = function() {
          var b = this;
          b.element.unbind({
              touchstart: a.proxy(b, "_touchStart"),
              touchmove: a.proxy(b, "_touchMove"),
              touchend: a.proxy(b, "_touchEnd")
          }), d.call(b)
      }
    }
  }(jQuery);


