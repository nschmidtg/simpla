
   
.container
  .row
    %h2.ollert-header
      .text-center.col-xs-12
        Etapa de Proyectos

  .row
    #responsiveTabsDemo
      %ul#myTab.nav.nav-tabs.responsive
        %li.lindo
          %a.tab-custom.active{:href => "#tab-1"} NO ASIGNADO
        %li.lindo
          %a.tab-custom{:href => "#tab-2"} EN FORMULACIÓN
        %li.lindo
          %a.tab-custom{:href => "#tab-3"} INGRESADO
        %li.lindo
          %a.tab-custom{:href => "#tab-4"} OBSERVADO
        %li.lindo
          %a.tab-custom{:href => "#tab-5"} CON APROBACIÓN TÉCNICA
        %li.lindo
          %a.tab-custom{:href => "#tab-6"} CON RECURSOS APROBADOS
        %li.lindo
          %a.tab-custom{:href => "#tab-7"} PREPARACIÓN LICITACIÓN
        %li.lindo
          %a.tab-custom{:href => "#tab-8"} EVALUACIÓN Y ADJUDICACIÓN DE PROPUESTAS
        %li.lindo
          %a.tab-custom{:href => "#tab-9"} EN EJECUCIÓN
        %li.lindo
          %a.tab-custom{:href => "#tab-10"} FINALIZADO
      .tab-content.responsive
        - @asignados = Array.new()
        - count=1
        - @states.each do |state|
          - count=count+1
          %div{id: "tab-#{count}", class: "tab-pane"}
            .col-md-12.col-sm-12.col-xs-12.no-padding
              %table.table{id: "myTable-#{count}"}
                %thead
                  %tr
                    %th Nombre Proyecto
                    %th Fondo
                    %th Tipo
                    %th Zonas
                    %th Estado
                

                %tbody
                  - @boards.each do |org_name, boards|
                    - prioridad_tablero=org_name
                    - if(@prioridades.include?(prioridad_tablero))
                      - boards.each do |board|
                        - if(state == board["name"].split('|')[1])
                          - @asignados<<board["name"]
                          %tr
                            %td
                              %a.btn.btn-link.boards-list-item-link{href: "/boards/#{board["id"]}"}
                                #{board["name"].split('|')[0]}
                            - actual_board=Board.find_by(board_id: board["id"])
                            %td
                              %a.boards-list-item-link
                                #{actual_board.fondo.name}
                            %td
                              %a.boards-list-item-link
                                #{actual_board.tipo.name}
                            %td
                              %a.boards-list-item-link
                                #{actual_board.zones.all.pluck(:name)}
                            %td
                              %a.boards-list-item-link
                                #{actual_board.current_state}
        %div{id: "tab-1", class: "tab-pane"}
          .col-md-12.col-sm-12.col-xs-12.no-padding
            %table.table{id: "myTable-1"}
              %thead
                %tr
                  %th Nombre Proyecto
                  %th Fondo
                  %th Tipo
                  %th Zonas
                  %th Estado
              %tbody
                - @boards.each do |org_name, boards|
                - prioridad_tablero=org_name
                  - if(@prioridades.include?(prioridad_tablero))
                    - boards.each do |board|
                      - unless  @asignados.include?(board["name"])
                        - #bdbrd=Board.find_or_create_by(board_id: board["id"])
                        - #if(bdbrd!=nil)
                        %tr
                          %td
                            %a.btn.btn-link.boards-list-item-link{href: "/boards/#{board["id"]}"}
                              #{board["name"]}
                          - actual_board=Board.find_by(board_id: board["id"])
                          %td
                            %a.boards-list-item-link
                              - if actual_board != nil
                                - if actual_board.fondo != nil
                                  #{actual_board.fondo.name}
                                - else
                                  NO ASIGNADO
                              - else
                                NO ASIGNADO
                          %td
                            %a.boards-list-item-link
                              - if actual_board != nil
                                - if actual_board.tipo != nil
                                  #{actual_board.tipo.name}
                                - else
                                  NO ASIGNADO
                              - else
                                NO ASIGNADO
                          %td
                            %a.boards-list-item-link
                              - if actual_board != nil
                                - if actual_board.zones != nil
                                  #{actual_board.zones.all.pluck(:name)}
                                - else
                                  NO ASIGNADAS
                              - else
                                NO ASIGNADAS
                          %td
                            %a.boards-list-item-link
                              NO ASIGNADO


  .row
    
  
  - @prioridades.each do |prioridad|
    
    .col-md-4.col-sm-4.col-xs-4.no-padding
      .analysis-block-md
        #{prioridad}
        %ul{class: 'board-list-prior'}
          - @boards.each do |org_name, boards|
            - prioridad_tablero=org_name
            - if(prioridad==(prioridad_tablero))
              - boards.each do |board|
                - org=Organization.find_or_initialize_by(org_id: Trello::Board.find(board["id"]).organization.id)
                - org.name=prioridad
                - org.municipio=@user.municipio
                - org.save
                - bdbrd=Board.find_by(board_id: board["id"])
                - if(bdbrd==nil)
                  - bdbrd=Board.new
                  - bdbrd.name=board["name"]
                  - bdbrd.board_id=board["id"]
                  - if(@closed.to_s=="true")
                    - bdbrd.closed="true"
                  - else
                    - bdbrd.closed="false"
                  - bdbrd.municipio=@user.municipio
                  - bdbrd.users<<@user
                  - bdbrd.save
                - else
                  - bdbrd.name=board["name"]
                  - if(@closed.to_s=="true")
                    - bdbrd.closed="true"
                  - else
                    - bdbrd.closed="false"
                  - bdbrd.save
                %li.boards-list-item
                  %a.btn.btn-link.boards-list-item-link{href: "/boards/#{board["id"]}"}
                    #{board["name"]}

- if(@user.role=="secpla" || @user.role=="admin")       
  :javascript
    $( ".boards-list").sortable({connectWith: ".boards-list",
      stop: function  (event,ui) {
          var $item=ui.item;
          var palabra=$item.parent().parent().text().split('\n')[1];
          var boardState=palabra.substring(18,palabra.length);
          if(boardState=="Finalizado" || boardState=="Descartado"){
            if(!confirm("¿Está seguro de que quiere marcar el proyecto como finalizado? El proyecto se cerrará")){window.location.reload();}
          }
          else{
            if(window.location.href.includes("closed")){
              if(!confirm("¿Está seguro de que quiere marcar el proyecto como "+boardState+"? El proyecto se volverá a abrir y se cargarán las tareas predeterminadas asociadas al estado.")){window.location.reload();}
            }
            else{
              if(!confirm("¿Está seguro de que quiere marcar el proyecto como "+boardState+"? Se cargarán las tareas predeterminadas asociadas al estado.")){window.location.reload();}
            }
          }
          var boardId=$item.find('a').attr('href').split('/')[2];
          $.ajax({
            url: "/api/v1/change_board_state/" + boardId,
            data: {
              token: "#{@token}",
              state: boardState
            },
            error: function(xhr) {
              if(!alert("Usted no tiene permisos de administrador en el tablero. El cambio de estado no será guardado.")){window.location.reload();}
            }
          });
        }
      });
    $( ".board-list-prior").sortable({connectWith: ".board-list-prior",
      stop: function  (event, ui) {
        var $item=ui.item;
        var boardPriority=$item.parent().parent().text().split('\n')[1].replace(/ /g,'');
        
        if(boardPriority=="2.Priorizados"){
          boardPriority="2. Priorizados";
        }
        else if(boardPriority=="1.Urgentes"){
          boardPriority="1. Urgentes";
        }
        else if(boardPriority=="3.NoPriorizados"){
          boardPriority="3. No Priorizados";
        }
        var boardId=$item.find('a').attr('href').split('/')[2];
        


        $.ajax({
          url: "/api/v1/change_board_priority/" + boardId,
          data: {
            token: "#{@token}",
            user_id: "#{@user.trello_id}",
            priority: boardPriority
          },
          error: function(xhr) {
            if(!alert("Usted no tiene permisos de administrador en el tablero. El cambio de prioridad no será guardado.")){window.location.reload();}
          }
        });
      }
    });

:javascript
  $(document).ready(function(){
    $('#responsiveTabsDemo').responsiveTabs({
      startCollapsed: 'accordion'
    });
    $("#myTable-1").tablesorter(); 
    $("#myTable-2").tablesorter(); 
    $("#myTable-3").tablesorter(); 
    $("#myTable-4").tablesorter(); 
    $("#myTable-5").tablesorter(); 
    $("#myTable-6").tablesorter(); 
    $("#myTable-7").tablesorter(); 
    $("#myTable-8").tablesorter(); 
    $("#myTable-9").tablesorter(); 
    $("#myTable-10").tablesorter(); 
  })