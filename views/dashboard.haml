.container
  %div
    /%h4
    /  %a{href: "/dashboard",style: "color:#808080"}Indicadores del Municipio >
    /%h2.ollert-header
    /  .text-center.col-xs-12.no-padding{style:"text-align:left;"}
    /    Resumen #{@mun.name}
    .fondo-blanco
      .row
        .col-md-12.col-sm-12.col-xs-12
          .col-md-3.col-sm-12.col-xs-12
            .boards-list-item-link-blue{style:"height:250px;"}
              %img.svg-element#boton{src: "/img/Iconos-blancos-23.png", type:"image/svg+xml", style:"width:65%;"}
              %h1{style:"margin-top:0px;margin-bottom:0px;"} 
                #{@boards.count}
              %h4{style:"margin:5px;"} 
                Proyectos Abiertos
    .row#graficos
      .col-md-12.col-sm-12.col-xs-12{style:"margin-top:30px;"}
        #container2
      .col-md-12.col-sm-12.col-xs-12{style:"margin-top:30px;"}
        #container1
      .col-md-12.col-sm-12.col-xs-12{style:"margin-top:30px;"}
        #container3
    .fondo-blanco
      .row{style:"margin:0px;"}
        %a.btn.plus#save_image_locally
          Descargar
      

:javascript
  var d3 = require('d3');
  var chart = require('d3.chart.bubble-matrix');

  var chart = d3.select('#container3').append('svg')
                .chart('BubbleMatrix')
                .width(400).height(200);

  chart.draw(require('./data'));
  /*! data.js */
  module.exports = {
      columns: ['the', 'cake', 'is', 'a', 'lie'],
      rows: [
          {name: 'foo', values: [[0.13, 0.69], [0.84, 0.49], [0.31, 0.97],
                                 [0.75, 0.29], [0.64, 0.9]]},
          {name: 'bar', values: [[0.98, 0.96], [0.13, 0.7], [0.27, 0.64],
                                 [0.17, 0.24], [0.94, 0.3]]},
          {name: 'baz', values: [[0.94, 0.1], [0.39, 0.63], [0.07, 0.27],
                                 [0.98, 0.02], [0.25, 0.94]]},
          {name: 'glo', values: [[0.3, 0.14], [0.39, 0.4], [0.54, 0.23],
                                 [0.35, 0.47], [0.71, 0.71]]}
      ]
  };

%script
  $('#container2').highcharts({
  chart: {
  type: 'column'
  },
  title: {
  text: 'Proyectos por zona'
  },
  subtitle: {
  text: ''
  },
  xAxis: {
  type: 'category',
  labels: {
  rotation: -45,
  style: {
  fontSize: '11px',
  fontFamily: 'Verdana, sans-serif'
  }
  }
  },
  yAxis: {
  min: 0,
  title: {
  text: 'Cantidad de proyectos'
  }
  },
  legend: {
  enabled: false
  },
  tooltip: {
  pointFormat: 'Proyectos en la zona:{point.extra}',
  style: {"max-height":"100px","z-index":"8000","overflow":"scroll","height":"100px !important"},
  useHTML: true
  },
  series: [{
  name: 'Proyectos',
  data: [
  - zones=@mun.zones.sort{|a,b| a.name.delete("^0-9").to_i <=> b.name.delete("^0-9").to_i}
  - board_names=zones.first.boards.where(closed: "false").pluck(:name)
  - extra="<br>"
  - board_names.each do |bname|
    - bname=bname.gsub('"','\'')
    - extra=extra+"- "+bname+"<br>"
  {name:"#{zones.first.name}",y:#{zones.first.boards.where(closed: "false").count},extra:"#{extra}"},
  - zones.each do |zone|
    - if(zone!=zones.first)
      - board_names=zone.boards.where(closed: "false").pluck(:name)
      - extra="<br>"
      - board_names.each do |bname|
        - bname=bname.gsub('"','\'')
        - extra=extra+"- "+bname+"<br>"
      {name:"#{zone.name}",y:#{zone.boards.where(closed: "false").count},extra:"#{extra}"},
  ],
  dataLabels: {
  enabled: true,
  rotation: -360,
  color: '#FFFFFF',
  align: 'right',
  format: '{point.y}', // one decimal
  y: 10, // 10 pixels down from the top
  style: {
  fontSize: '13px',
  fontFamily: 'Verdana, sans-serif'
  }
  }
  }]
  });
  

%script
  $('#container1').highcharts({
  chart: {
  type: 'column'
  },
  title: {
  text: 'Proyectos por tipo'
  },
  subtitle: {
  text: ''
  },
  xAxis: {
  type: 'category',
  labels: {
  rotation: -45,
  style: {
  fontSize: '13px',
  fontFamily: 'Verdana, sans-serif'
  }
  }
  },
  yAxis: {
  title: {
  text: 'Total de proyectos'
  }

  },
  legend: {
  enabled: false
  },
  plotOptions: {
  series: {
  borderWidth: 0,
  dataLabels: {
  enabled: true,
  format: '{point.y}'
  }
  }
  },

  tooltip: {
  headerFormat: '<span style="font-size:11px">{series.name}:</span><br>',
  pointFormat: '<span style="color:{point.color}">{point.name}</span>: <b>{point.y}</b> proyectos.<br/>'
  },

  series: [{
  name: 'Tipo de proyecto',
  colorByPoint: true,
  data: [
  {name:'#{@mun.tipos.first.name}',y: #{@mun.tipos.first.boards.where(closed: "false").count}},
  - @mun.tipos.each do |tipo|
    - if(tipo!=@mun.tipos.first)
      {name:"#{tipo.name}",y: #{tipo.boards.where(closed: "false").count}},
  ]
  }]
  
  });

:javascript
  $('#save_image_locally').click(function(){
  var svgElements= $("#graficos").find('svg');

  //replace all svgs with a temp canvas
  svgElements.each(function () {
    var canvas, xml;

    canvas = document.createElement("canvas");
    canvas.className = "screenShotTempCanvas";
    //convert SVG into a XML string
    xml = (new XMLSerializer()).serializeToString(this);

    // Removing the name space as IE throws an error
    xml = xml.replace(/xmlns=\"http:\/\/www\.w3\.org\/2000\/svg\"/, '');

    //draw the SVG onto a canvas
    canvg(canvas, xml);
    $(canvas).insertAfter(this);
    //hide the SVG element
    this.className = "tempHide";
    $(this).hide();
  });
  html2canvas($('#graficos'), 
    {background :'#FFFFFF',
      onrendered: function (canvas) {
        var a = document.createElement('a');
        // toDataURL defaults to png, so we need to request a jpeg, then convert for file download.
        a.href = canvas.toDataURL("image/png");
        a.download = 'archivo-proyectos.png';
        a.click();
      }
    });
  });
    